function doGet(_e) {
  let stringData = '';

  try {
    const dataManipulation = new DataManipulation();
    const commands = dataManipulation.getCommandsToRun();
    (commands || []).forEach((command) => {
      const {commandToRun, commandLine} = command;
      stringData = `${stringData}${commandLine}: ${commandToRun}\n`;
    });
  } catch(e) {
    if (errorHasMessage(e)) {
      log(e.message);
    }
  }
  console.log(stringData);
  return ContentService.createTextOutput(stringData);
}


function doPost(e) {
  // console.log(JSON.stringify(e.parameter));
  const returnInvalid = ContentService.createTextOutput('Invalid parameter commandLine');
  const returnInexistent = ContentService.createTextOutput('No parameter commandLine');
  const returnError = ContentService.createTextOutput('Error while posting data');
  const returnSuccess = ContentService.createTextOutput('OK')

  if (!e.parameter || !e.parameter.commandLine) {
    return returnInexistent;
  } // else
  let {commandLine} = e.parameter;
  const output = e.postData.contents || '';
  if (typeof commandLine === 'string') {
    commandLine = parseInt(commandLine, 10);
  }
  if (commandLine < 1 || !Number.isInteger(commandLine)) {
    return returnInvalid;
  } // else

  try {
    const dataManipulation = new DataManipulation();
    dataManipulation.postCommandOutput(commandLine, output);
    return returnSuccess;
  } catch (e) {
    if (errorHasMessage(e)) {
      log(e);
    }
    return returnError;
  }
}
